# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Codra - Pierre Raybaut
# This file is distributed under the same license as the DataLab package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: DataLab \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-29 15:46+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.14.0\n"

#: ../../features/general/plugins.rst:2
msgid "Plugins"
msgstr "Plugins"

#: ../../features/general/plugins.rst:4
msgid ""
"DataLab is a modular application. It is possible to add new features to "
"DataLab by writing plugins. A plugin is a Python module that is loaded at"
" startup by DataLab. A plugin may add new features to DataLab, or modify "
"existing features."
msgstr ""
"DataLab est une application modulaire. Il est possible d'ajouter de "
"nouvelles fonctionnalités à DataLab en écrivant des plugins. Un plugin "
"est un module Python qui est chargé au démarrage par DataLab. Un plugin "
"peut ajouter de nouvelles fonctionnalités à DataLab, ou modifier des "
"fonctionnalités existantes."

#: ../../features/general/plugins.rst:8
msgid "The plugin system currently supports the following features:"
msgstr ""
"Le système de plugins prend actuellement en charge les fonctionnalités "
"suivantes :"

#: ../../features/general/plugins.rst:10
msgid ""
"Processing features: add new processing tasks to the DataLab processing "
"system, including specific graphical user interfaces."
msgstr ""
"Fonctionnalités de traitement : ajouter de nouvelles tâches de traitement"
" au système de traitement DataLab, y compris des interfaces graphiques "
"spécifiques."

#: ../../features/general/plugins.rst:12
msgid ""
"Input/output features: add new file formats to the DataLab file I/O "
"system."
msgstr ""
"Entrée/sortie : ajouter de nouveaux formats de fichiers au système "
"d'entrée/sortie de DataLab."

#: ../../features/general/plugins.rst:13
msgid "HDF5 features: add new HDF5 file formats to the DataLab HDF5 I/O system."
msgstr ""
"Fonctionnalités HDF5 : ajouter de nouveaux formats de fichiers HDF5 au "
"système d'entrée/sortie HDF5 de DataLab."

#: ../../features/general/plugins.rst:16
msgid "What is a plugin?"
msgstr "Qu'est-ce qu'un plugin ?"

#: ../../features/general/plugins.rst:18
msgid ""
"A plugin is a Python module that is loaded at startup by DataLab. A "
"plugin may add new features to DataLab, or modify existing features."
msgstr ""
"Un plugin est un module Python qui est chargé au démarrage par DataLab. "
"Un plugin peut ajouter de nouvelles fonctionnalités à DataLab, ou "
"modifier des fonctionnalités existantes."

#: ../../features/general/plugins.rst:21
msgid ""
"A plugin is a Python module that contains a class derived from the "
":class:`cdl.plugins.PluginBase` class. The name of the class is not "
"important, as long as it is derived from :class:`cdl.plugins.PluginBase` "
"and has a ``PLUGIN_INFO`` attribute that is an instance of the "
":class:`cdl.plugins.PluginInfo` class. The ``PLUGIN_INFO`` attribute is "
"used by DataLab to retrieve information about the plugin."
msgstr ""
"Un plugin est un module Python qui contient une classe dérivée de la "
"classe :class:`cdl.plugins.PluginBase`. Le nom de la classe n'est pas important, tant "
"qu'elle est dérivée de :class:`cdl.plugins.PluginBase` et qu'elle dispose d'un attribut "
"``PLUGIN_INFO`` qui est une instance de la classe :class:`cdl.plugins.PluginInfo`. L'attribut "
"``PLUGIN_INFO`` est utilisé par DataLab pour récupérer des informations sur"
" le plugin."

#: ../../features/general/plugins.rst:29
msgid "Where to put a plugin?"
msgstr "Où est positionné un plugin ?"

#: ../../features/general/plugins.rst:31
msgid ""
"As plugins are Python modules, they can be put anywhere in the Python "
"path of the DataLab installation."
msgstr ""
"Etant donné que les plugins sont des modules Python, ils peuvent être "
"placés n'importe où dans le chemin Python de l'installation de DataLab."

#: ../../features/general/plugins.rst:34
msgid "Special additional locations are available for plugins:"
msgstr ""
"Des emplacements supplémentaires spéciaux sont disponibles pour les "
"plugins :"

#: ../../features/general/plugins.rst:36
msgid ""
"The `plugins` directory in the user configuration folder (e.g. "
"`C:\\Users\\JohnDoe\\.DataLab\\plugins` on Windows or "
"`~/.DataLab/plugins` on Linux)."
msgstr ""
"Le répertoire `plugins` dans le dossier de configuration de l'utilisateur"
" (par exemple `C:\\Users\\JohnDoe\\.DataLab\\plugins` sur Windows ou "
"`~/.DataLab/plugins` sur Linux)."

#: ../../features/general/plugins.rst:40
msgid ""
"The `plugins` directory in the same folder as the `DataLab` executable in"
" case of a standalone installation."
msgstr ""
"Le répertoire `plugins` dans le même dossier que l'exécutable `DataLab` "
"en cas d'installation autonome."

#: ../../features/general/plugins.rst:43
msgid ""
"The `plugins` directory in the `cdl` package in case for internal plugins"
" only (i.e. it is not recommended to put your own plugins there)."
msgstr ""
"Le répertoire `plugins` dans le package `cdl` en cas de plugins internes "
"uniquement (c'est-à-dire qu'il n'est pas recommandé d'y placer vos "
"propres plugins)."

#: ../../features/general/plugins.rst:47
msgid "Example: processing plugin"
msgstr "Exemple : plugin de traitement"

#: ../../features/general/plugins.rst:49
msgid "Here is a simple example of a plugin that adds a new features to DataLab."
msgstr ""
"Voici un exemple simple d'un plugin qui ajoute une nouvelle "
"fonctionnalité à DataLab."

#: ../../features/general/plugins.rst:54
msgid "Example: input/output plugin"
msgstr "Exemple : plugin d'entrée/sortie"

#: ../../features/general/plugins.rst:56
msgid ""
"Here is a simple example of a plugin that adds a new file formats to "
"DataLab."
msgstr ""
"Voici un exemple simple d'un plugin qui ajoute de nouveaux formats de "
"fichiers à DataLab."

#: ../../features/general/plugins.rst:61
msgid "Other examples"
msgstr "Autres exemples"

#: ../../features/general/plugins.rst:63
msgid ""
"Other examples of plugins can be found in the `plugins/examples` "
"directory of the DataLab source code (explore `here on GitHub "
"<https://github.com/Codra-Ingenierie-"
"Informatique/DataLab/tree/main/plugins/examples>`_)."
msgstr "D'autres exemples de plugins peuvent être trouvés dans le répertoire `plugins/examples` du code source de DataLab (explorez `ici sur GitHub <https://github.com/Codra-Ingenierie-Informatique/DataLab/tree/main/plugins/examples>`_)."

#: ../../features/general/plugins.rst:67
msgid "Public API"
msgstr "API publique"

#: cdl.plugins:2 of
msgid "DataLab plugin system"
msgstr "Système de plugins de DataLab"

#: cdl.plugins:4 of
msgid ""
"DataLab plugin system provides a way to extend the application with new "
"functionalities."
msgstr "Le système de plugins de DataLab fournit un moyen d'étendre l'application avec de nouvelles fonctionnalités."

#: cdl.plugins:7 of
msgid "Plugins are Python modules that relies on two classes:"
msgstr "Les plugins sont des modules Python qui reposent sur deux classes :"

#: cdl.plugins:9 of
msgid ":class:`PluginInfo`, which stores information about the plugin"
msgstr ":class:`PluginInfo`, qui stocke des informations sur le plugin"

#: cdl.plugins:10 of
msgid ":class:`PluginBase`, which is the base class for all plugins"
msgstr ":class:`PluginBase`, qui est la classe de base pour tous les plugins"

#: cdl.plugins:12 of
msgid ""
"Plugins may also extends DataLab I/O features by providing new image or "
"signal formats. To do so, they must provide a subclass of "
":class:`ImageFormatBase` or :class:`SignalFormatBase`, in which format "
"infos are defined using the :class:`FormatInfo` class."
msgstr "Les plugins peuvent également étendre les fonctionnalités d'entrée/sortie de DataLab en fournissant de nouveaux formats d'image ou de signal. Pour ce faire, ils doivent fournir une sous-classe de :class:`ImageFormatBase` ou :class:`SignalFormatBase`, dans laquelle les informations de format sont définies à l'aide de la classe :class:`FormatInfo`."

#: cdl.plugins.PluginRegistry:1 of
msgid "Metaclass for registering plugins"
msgstr "Métaclasse pour l'enregistrement des plugins"

#: cdl.plugins.PluginRegistry.get_plugin_classes:1 of
msgid "Return plugin classes"
msgstr "Retourne les classes de plugins"

#: cdl.plugins.PluginRegistry.get_plugins:1 of
msgid "Return plugin instances"
msgstr "Retourne les instances de plugins"

#: cdl.plugins.PluginRegistry.get_plugin:1 of
msgid "Return plugin instance"
msgstr "Retourne l'instance de plugin"

#: cdl.plugins.PluginBase.register:1
#: cdl.plugins.PluginRegistry.register_plugin:1 of
msgid "Register plugin"
msgstr "Enregistrer le plugin"

#: cdl.plugins.PluginBase.unregister:1
#: cdl.plugins.PluginRegistry.unregister_plugin:1 of
msgid "Unregister plugin"
msgstr "Désenregistrer le plugin"

#: cdl.plugins.PluginRegistry.get_plugin_infos:1 of
msgid "Return plugin infos (names, versions, descriptions) in html format"
msgstr "Retourne les informations sur les plugins (noms, versions, descriptions) au format html"

#: cdl.plugins.PluginInfo:1 of
msgid "Plugin info"
msgstr "Informations sur le plugin"

#: cdl.plugins.PluginBaseMeta:1 of
msgid "Mixed metaclass to avoid conflicts"
msgstr "Métaclasse mixte pour éviter les conflits"

#: cdl.plugins.PluginBase:1 of
msgid "Plugin base class"
msgstr "Classe de base du plugin"

#: cdl.plugins.PluginBase.signalpanel:1 of
msgid "Return signal panel"
msgstr "Retourne le panneau de signal"

#: cdl.plugins.PluginBase.imagepanel:1 of
msgid "Return image panel"
msgstr "Retourne le panneau d'image"

#: cdl.plugins.PluginBase.show_warning:1 of
msgid "Show warning message"
msgstr "Afficher un message d'avertissement"

#: cdl.plugins.PluginBase.show_error:1 of
msgid "Show error message"
msgstr "Afficher un message d'erreur"

#: cdl.plugins.PluginBase.show_info:1 of
msgid "Show info message"
msgstr "Afficher un message d'information"

#: cdl.plugins.PluginBase.ask_yesno:1 of
msgid "Ask yes/no question"
msgstr "Poser une question oui/non"

#: cdl.plugins.PluginBase.is_registered:1 of
msgid "Return True if plugin is registered"
msgstr "Retourne True si le plugin est enregistré"

#: cdl.plugins.PluginBase.register_hooks:1 of
msgid "Register plugin hooks"
msgstr "Enregistrer les hooks du plugin"

#: cdl.plugins.PluginBase.unregister_hooks:1 of
msgid "Unregister plugin hooks"
msgstr "Désenregistrer les hooks du plugin"

#: cdl.plugins.PluginBase.create_actions:1 of
msgid "Create actions"
msgstr "Créer des actions"

#: cdl.plugins.discover_plugins:1 of
msgid "Discover plugins using naming convention"
msgstr "Découvrir les plugins en utilisant la convention de nommage"

#~ msgid "Example"
#~ msgstr "Exemple"

#~ msgid "Format info"
#~ msgstr ""

#~ msgid "Object representing an image file type"
#~ msgstr ""

#~ msgid "Create empty object"
#~ msgstr ""

#~ msgid "Parameters"
#~ msgstr ""

#~ msgid "File name"
#~ msgstr ""

#~ msgid "Index of object in file"
#~ msgstr ""

#~ msgid "Returns"
#~ msgstr ""

#~ msgid "Image object"
#~ msgstr ""

#~ msgid "Return type"
#~ msgstr ""

#~ msgid "Read data from file, return one or more objects"
#~ msgstr ""

#~ msgid "Read data and return it"
#~ msgstr ""

#~ msgid "Image data"
#~ msgstr ""

#~ msgid "Object representing a signal file type"
#~ msgstr ""

#~ msgid "Signal object"
#~ msgstr ""

#~ msgid ""
#~ "Read data and metadata from file, "
#~ "write metadata to object, return xydata"
#~ msgstr ""

#~ msgid "XY data"
#~ msgstr ""

#~ msgid "Set signal xydata"
#~ msgstr ""
