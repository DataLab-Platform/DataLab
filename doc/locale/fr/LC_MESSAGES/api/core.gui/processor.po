# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, DataLab Platform Developers
# This file is distributed under the same license as the DataLab package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: DataLab \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-31 15:59+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: fr\n"
"Language-Team: fr <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

msgid "Processor"
msgstr "Processeur"

msgid "The :mod:`cdl.core.gui.processor` package provides the **processor objects** for signals and images."
msgstr "Le paquet :mod:`cdl.core.gui.processor` fournit les **objets processeur** pour les signaux et les images."

msgid "Processor objects are the bridge between the computation modules (in :mod:`cdl.computation`) and the GUI modules (in :mod:`cdl.core.gui`). They are used to call the computation functions and to update the GUI from inside the data panel objects."
msgstr "Les objets processeur sont le pont entre les modules de calcul (dans :mod:`cdl.computation`) et les modules GUI (dans :mod:`cdl.core.gui`). Ils sont utilisés pour appeler les fonctions de calcul et pour mettre à jour l'interface utilisateur depuis l'intérieur des objets de panneau de données."

msgid "When implementing a processing feature in DataLab, the steps are usually the following:"
msgstr "Lors de la mise en œuvre d'une fonction de traitement dans DataLab, les étapes sont généralement les suivantes :"

msgid "Add an action in the :mod:`cdl.core.gui.actionhandler` module to trigger the processing feature from the GUI (e.g. a menu item or a toolbar button)."
msgstr "Ajout d'une action dans le module :mod:`cdl.core.gui.actionhandler` pour déclencher la fonction de traitement depuis l'interface utilisateur (par exemple, un élément de menu ou un bouton de barre d'outils)."

msgid "Implement the computation function in the :mod:`cdl.computation` module (that would eventually call the algorithm from the :mod:`cdl.algorithms` module)."
msgstr "Implémentation de la fonction de calcul dans le module :mod:`cdl.computation` (qui appellerait éventuellement l'algorithme du module :mod:`cdl.algorithms`)."

msgid "Implement the processor object method in this package to call the computation function and eventually update the GUI."
msgstr "Implémentation de la méthode de l'objet processeur dans ce paquet pour appeler la fonction de calcul et éventuellement mettre à jour l'interface utilisateur."

msgid "The processor objects are organized in submodules according to their purpose."
msgstr "Les objets processeur sont organisés en sous-modules en fonction de leur objectif."

msgid "The following submodules are available:"
msgstr "Les sous-modules suivants sont disponibles :"

msgid ":mod:`cdl.core.gui.processor.base`: Common processing features"
msgstr ":mod:`cdl.core.gui.processor.base`: Fonctions de traitement communes"

msgid ":mod:`cdl.core.gui.processor.signal`: Signal processing features"
msgstr ":mod:`cdl.core.gui.processor.signal`: Fonctions de traitement de signaux"

msgid ":mod:`cdl.core.gui.processor.image`: Image processing features"
msgstr ":mod:`cdl.core.gui.processor.image`: Fonctions de traitement d'images"

msgid "Common features"
msgstr "Fonctions communes"

msgid "Multiprocessing worker, to run long-running tasks in a separate process"
msgstr "Travailleur de traitement parallèle, pour exécuter des tâches de longue durée dans un processus séparé"

msgid "Create multiprocessing pool"
msgstr "Créer un pool de traitement parallèle"

msgid "Terminate multiprocessing pool."
msgstr "Terminer le pool de traitement parallèle."

msgid "Parameters"
msgstr ""

msgid "wait for all tasks to finish. Defaults to False."
msgstr ""

msgid "Terminate and recreate the pool"
msgstr ""

msgid "Run computation."
msgstr ""

msgid "function to run"
msgstr ""

msgid "arguments"
msgstr ""

msgid "Close worker: close pool properly and wait for all tasks to finish"
msgstr ""

msgid "Return True if computation is finished."
msgstr ""

msgid "Returns"
msgstr ""

msgid "True if computation is finished"
msgstr ""

msgid "Return type"
msgstr ""

msgid "Return computation result."
msgstr ""

msgid "computation result"
msgstr ""

msgid "Return True if operation mode is pairwise."
msgstr ""

msgid "True if operation mode is pairwise"
msgstr ""

msgid "Object handling data processing: operations, processing, analysis."
msgstr ""

msgid "panel"
msgstr ""

msgid "plot widget"
msgstr ""

msgid "Close processor properly"
msgstr ""

msgid "Set process isolation enabled."
msgstr ""

msgid "enabled"
msgstr ""

msgid "Return True if parameter defaults are available."
msgstr ""

msgid "parameter class"
msgstr ""

msgid "True if parameter defaults are available"
msgstr ""

msgid "Update parameter defaults."
msgstr ""

msgid "parameters"
msgstr ""

msgid "Initialize processing parameters."
msgstr ""

msgid "parameter"
msgstr ""

msgid "title"
msgstr ""

msgid "comment"
msgstr ""

msgid "Tuple (edit, param) where edit is True if parameters have been edited, False otherwise."
msgstr ""

msgid "Compute 11 function: 1 object in → 1 object out."
msgstr ""

msgid "function"
msgstr ""

msgid "edit parameters"
msgstr ""

msgid "Compute 1n function: 1 object in → n objects out."
msgstr ""

msgid "list of functions"
msgstr ""

msgid "list of parameters"
msgstr ""

msgid "Handle computation output: if error, display error message, if warning, display warning message."
msgstr ""

msgid "computation output"
msgstr ""

msgid "context (e.g. \"Computing: Gaussian filter\")"
msgstr ""

msgid "progress dialog"
msgstr ""

msgid "a signal or image object, or a result shape object,  or None if error"
msgstr ""

msgid "a signal or image object, or a result shape object,"
msgstr ""

msgid "or None if error"
msgstr ""

msgid "Compute 10 function: 1 object in → 0 object out (the result of this method is stored in original object's metadata)."
msgstr ""

msgid "function to execute"
msgstr ""

msgid "parameters. Defaults to None."
msgstr ""

msgid "parameters class. Defaults to None."
msgstr ""

msgid "title of progress bar. Defaults to None."
msgstr ""

msgid "comment. Defaults to None."
msgstr ""

msgid "if True, edit parameters. Defaults to None."
msgstr ""

msgid "object uuid, values: ResultShape or  ResultProperties objects)"
msgstr ""

msgid "object uuid, values: ResultShape or"
msgstr ""

msgid "ResultProperties objects)"
msgstr ""

msgid "Compute n1 function: N(>=2) objects in → 1 object out."
msgstr ""

msgid "name of function"
msgstr ""

msgid "function to execute on objects. Defaults to None."
msgstr ""

msgid "Compute n1n function: N(>=1) objects + 1 object in → N objects out."
msgstr ""

msgid "Examples: subtract, divide"
msgstr ""

msgid "second object (or list of objects in case of pairwise operation mode)"
msgstr ""

msgid "name of second object"
msgstr ""

msgid "Compute arithmetic operation"
msgstr ""

msgid "Compute sum"
msgstr ""

msgid "Normalize data"
msgstr ""

msgid "Compute average"
msgstr ""

msgid "Compute product"
msgstr ""

msgid "Compute difference"
msgstr ""

msgid "Compute quadratic difference"
msgstr ""

msgid "Compute division"
msgstr ""

msgid "Swap data axes"
msgstr ""

msgid "Compute inverse"
msgstr ""

msgid "Compute absolute value"
msgstr ""

msgid "Compute real part"
msgstr ""

msgid "Compute imaginary part"
msgstr ""

msgid "Convert data type"
msgstr ""

msgid "Compute Log10"
msgstr ""

msgid "Compute exponential"
msgstr ""

msgid "Compute data linear calibration"
msgstr ""

msgid "Compute maximum data clipping"
msgstr ""

msgid "Compute gaussian filter"
msgstr ""

msgid "Compute moving average"
msgstr ""

msgid "Compute moving median"
msgstr ""

msgid "Compute Wiener filter"
msgstr ""

msgid "Compute iFFT"
msgstr ""

msgid "Compute FFT"
msgstr ""

msgid "Compute sum with a constant"
msgstr ""

msgid "Compute difference with a constant"
msgstr ""

msgid "Compute product with a constant"
msgstr ""

msgid "Compute division by a constant"
msgstr ""

msgid "Extract Region Of Interest (ROI) from data with:"
msgstr ""

msgid ":py:func:`cdl.computation.image.extract_single_roi` for single ROI"
msgstr ""

msgid ":py:func:`cdl.computation.image.extract_multiple_roi` for multiple ROIs"
msgstr ""

msgid "Define Region Of Interest (ROI)."
msgstr ""

msgid "If True, ROI is extracted from data. Defaults to False."
msgstr ""

msgid "ROI object or None if ROI dialog has been canceled."
msgstr ""

msgid "Delete Regions Of Interest"
msgstr ""

msgid "Compute data statistics"
msgstr ""

msgid "Signal processing features"
msgstr ""

msgid "Object handling signal processing: operations, processing, analysis"
msgstr ""

msgid "Compute sum with :py:func:`cdl.computation.signal.compute_addition`"
msgstr ""

msgid "Compute sum with a constant with :py:func:`cdl.computation.signal.compute_addition_constant`"
msgstr ""

msgid "Compute average with :py:func:`cdl.computation.signal.compute_addition` and divide by the number of signals"
msgstr ""

msgid "Compute product with :py:func:`cdl.computation.signal.compute_product`"
msgstr ""

msgid "Compute product with a constant with :py:func:`cdl.computation.signal.compute_product_constant`"
msgstr ""

msgid "Swap data axes with :py:func:`cdl.computation.signal.compute_swap_axes`"
msgstr ""

msgid "Compute absolute value with :py:func:`cdl.computation.signal.compute_abs`"
msgstr ""

msgid "Compute real part with :py:func:`cdl.computation.signal.compute_re`"
msgstr ""

msgid "Compute imaginary part with :py:func:`cdl.computation.signal.compute_im`"
msgstr ""

msgid "Convert data type with :py:func:`cdl.computation.signal.compute_astype`"
msgstr ""

msgid "Compute Log10 with :py:func:`cdl.computation.signal.compute_log10`"
msgstr ""

msgid "Compute Log10 with :py:func:`cdl.computation.signal.compute_exp`"
msgstr ""

msgid "Compute square root with :py:func:`cdl.computation.signal.compute_sqrt`"
msgstr ""

msgid "Compute power with :py:func:`cdl.computation.signal.compute_power`"
msgstr ""

msgid "Compute arithmetic operation between two signals with :py:func:`cdl.computation.signal.compute_arithmetic`"
msgstr ""

msgid "Compute difference between two signals with :py:func:`cdl.computation.signal.compute_difference`"
msgstr ""

msgid "Compute difference with a constant with :py:func:`cdl.computation.signal.compute_difference_constant`"
msgstr ""

msgid "Compute quadratic difference between two signals with :py:func:`cdl.computation.signal.compute_quadratic_difference`"
msgstr ""

msgid "Compute division between two signals with :py:func:`cdl.computation.signal.compute_division`"
msgstr ""

msgid "Compute division by a constant with :py:func:`cdl.computation.signal.compute_division_constant`"
msgstr ""

msgid "Detect peaks from data with :py:func:`cdl.computation.signal.compute_peak_detection`"
msgstr ""

msgid "Reverse X axis with :py:func:`cdl.computation.signal.compute_reverse_x`"
msgstr ""

msgid "Convert cartesian to polar coordinates with :py:func:`cdl.computation.signal.compute_cartesian2polar`"
msgstr ""

msgid "Convert polar to cartesian coordinates with :py:func:`cdl.computation.signal.compute_polar2cartesian`."
msgstr ""

msgid "Normalize data with :py:func:`cdl.computation.signal.compute_normalize`"
msgstr ""

msgid "Compute derivative with :py:func:`cdl.computation.signal.compute_derivative`"
msgstr ""

msgid "Compute integral with :py:func:`cdl.computation.signal.compute_integral`"
msgstr ""

msgid "Compute data linear calibration with :py:func:`cdl.computation.signal.compute_calibration`"
msgstr ""

msgid "Compute maximum data clipping with :py:func:`cdl.computation.signal.compute_clip`"
msgstr ""

msgid "Compute offset correction with :py:func:`cdl.computation.signal.compute_offset_correction`"
msgstr ""

msgid "Compute gaussian filter with :py:func:`cdl.computation.signal.compute_gaussian_filter`"
msgstr ""

msgid "Compute moving average with :py:func:`cdl.computation.signal.compute_moving_average`"
msgstr ""

msgid "Compute moving median with :py:func:`cdl.computation.signal.compute_moving_median`"
msgstr ""

msgid "Compute Wiener filter with :py:func:`cdl.computation.signal.compute_wiener`"
msgstr ""

msgid "Compute high-pass filter with :py:func:`cdl.computation.signal.compute_filter`"
msgstr ""

msgid "Compute band-pass filter with :py:func:`cdl.computation.signal.compute_filter`"
msgstr ""

msgid "Compute band-stop filter with :py:func:`cdl.computation.signal.compute_filter`"
msgstr ""

msgid "Compute FFT with :py:func:`cdl.computation.signal.compute_fft`"
msgstr ""

msgid "Compute iFFT with :py:func:`cdl.computation.signal.compute_ifft`"
msgstr ""

msgid "Compute magnitude spectrum with :py:func:`cdl.computation.signal.compute_magnitude_spectrum`"
msgstr ""

msgid "Compute phase spectrum with :py:func:`cdl.computation.signal.compute_phase_spectrum`"
msgstr ""

msgid "Compute power spectral density with :py:func:`cdl.computation.signal.compute_psd`"
msgstr ""

msgid "Compute interpolation with :py:func:`cdl.computation.signal.compute_interpolation`"
msgstr ""

msgid "Compute resampling with :py:func:`cdl.computation.signal.compute_resampling`"
msgstr ""

msgid "Compute detrending with :py:func:`cdl.computation.signal.compute_detrending`"
msgstr ""

msgid "Compute XY mode with :py:func:`cdl.computation.signal.compute_XY_mode.`"
msgstr ""

msgid "Compute convolution with :py:func:`cdl.computation.signal.compute_convolution`"
msgstr ""

msgid "Compute windowing with :py:func:`cdl.computation.signal.compute_windowing`"
msgstr ""

msgid "Compute Allan variance with :py:func:`cdl.computation.signal.compute_allan_variance`"
msgstr ""

msgid "Compute Allan deviation with :py:func:`cdl.computation.signal.compute_allan_deviation`"
msgstr ""

msgid "Compute overlapping Allan variance with :py:func:`cdl.computation.signal.compute_overlapping_allan_variance`"
msgstr ""

msgid "Compute modified Allan variance with :py:func:`cdl.computation.signal.compute_modified_allan_variance`"
msgstr ""

msgid "Compute Hadamard variance with :py:func:`cdl.computation.signal.compute_hadamard_variance`"
msgstr ""

msgid "Compute total variance with :py:func:`cdl.computation.signal.compute_total_variance`"
msgstr ""

msgid "Compute time deviation with :py:func:`cdl.computation.signal.compute_time_deviation`"
msgstr ""

msgid "Compute all stability analysis features using the following functions:"
msgstr ""

msgid ":py:func:`cdl.computation.signal.compute_allan_variance`"
msgstr ""

msgid ":py:func:`cdl.computation.signal.compute_allan_deviation`"
msgstr ""

msgid ":py:func:`cdl.computation.signal.compute_overlapping_allan_variance`"
msgstr ""

msgid ":py:func:`cdl.computation.signal.compute_modified_allan_variance`"
msgstr ""

msgid ":py:func:`cdl.computation.signal.compute_hadamard_variance`"
msgstr ""

msgid ":py:func:`cdl.computation.signal.compute_total_variance`"
msgstr ""

msgid ":py:func:`cdl.computation.signal.compute_time_deviation`"
msgstr ""

msgid "Compute polynomial fitting curve"
msgstr ""

msgid "Compute fitting curve using an interactive dialog"
msgstr ""

msgid "Title of the dialog"
msgstr ""

msgid "Fitting dialog function"
msgstr ""

msgid "Compute multi-Gaussian fitting curve using an interactive dialog"
msgstr ""

msgid "Compute FWHM with :py:func:`cdl.computation.signal.compute_fwhm`"
msgstr ""

msgid "Compute FW at 1/e² with :py:func:`cdl.computation.signal.compute_fw1e2`"
msgstr ""

msgid "Compute data statistics with :py:func:`cdl.computation.signal.compute_stats`"
msgstr ""

msgid "Compute histogram with :py:func:`cdl.computation.signal.compute_histogram`"
msgstr ""

msgid "Compute contrast with :py:func:`cdl.computation.signal.compute_contrast`"
msgstr ""

msgid "Compute x at min/max with :py:func:`cdl.computation.signal.compute_x_at_minmax`"
msgstr ""

msgid "Compute x at y with :py:func:`cdl.computation.signal.compute_x_at_y`."
msgstr ""

msgid "Compute sampling rate and period (mean and std) with :py:func:`cdl.computation.signal.compute_sampling_rate_period`"
msgstr ""

msgid "Compute bandwidth at -3dB with :py:func:`cdl.computation.signal.compute_bandwidth_3db`"
msgstr ""

msgid "Compute Dynamic Parameters (ENOB, SINAD, THD, SFDR, SNR) with :py:func:`cdl.computation.signal.compute_dynamic_parameters`"
msgstr ""

msgid "Image processing features"
msgstr ""

msgid "Object handling image processing: operations, processing, analysis"
msgstr ""

msgid "Normalize data with :py:func:`cdl.computation.image.compute_normalize`"
msgstr ""

msgid "Compute sum with :py:func:`cdl.computation.image.compute_addition`"
msgstr ""

msgid "Compute sum with a constant using :py:func:`cdl.computation.image.compute_addition_constant`"
msgstr ""

msgid "Compute average with :py:func:`cdl.computation.image.compute_addition` and dividing by the number of images"
msgstr ""

msgid "Compute product with :py:func:`cdl.computation.image.compute_product`"
msgstr ""

msgid "Compute product with a constant using :py:func:`cdl.computation.image.compute_product_constant`"
msgstr ""

msgid "Compute base 10 logarithm using :py:func:`cdl.computation.image.compute_logp1`"
msgstr ""

msgid "Rotate data arbitrarily using :py:func:`cdl.computation.image.compute_rotate`"
msgstr ""

msgid "Rotate data 90° with :py:func:`cdl.computation.image.compute_rotate90`"
msgstr ""

msgid "Rotate data 270° with :py:func:`cdl.computation.image.compute_rotate270`"
msgstr ""

msgid "Flip data horizontally using :py:func:`cdl.computation.image.compute_fliph`"
msgstr ""

msgid "Flip data vertically with :py:func:`cdl.computation.image.compute_flipv`"
msgstr ""

msgid "Distribute images on a grid"
msgstr ""

msgid "Reset image positions"
msgstr ""

msgid "Resize image with :py:func:`cdl.computation.image.compute_resize`"
msgstr ""

msgid "Binning image with :py:func:`cdl.computation.image.compute_binning`"
msgstr ""

msgid "Compute profile along a vertical or horizontal line with :py:func:`cdl.computation.image.compute_line_profile`"
msgstr ""

msgid "Compute profile along a segment with :py:func:`cdl.computation.image.compute_segment_profile`"
msgstr ""

msgid "Compute average profile with :py:func:`cdl.computation.image.compute_average_profile`"
msgstr ""

msgid "Compute radial profile with :py:func:`cdl.computation.image.compute_radial_profile`"
msgstr ""

msgid "Compute histogram with :py:func:`cdl.computation.image.compute_histogram`"
msgstr ""

msgid "Swap data axes with :py:func:`cdl.computation.image.compute_swap_axes`."
msgstr ""

msgid "Compute absolute value with :py:func:`cdl.computation.image.compute_abs`"
msgstr ""

msgid "Compute real part with :py:func:`cdl.computation.image.compute_re`"
msgstr ""

msgid "Compute imaginary part with :py:func:`cdl.computation.image.compute_im`"
msgstr ""

msgid "Convert data type with :py:func:`cdl.computation.image.compute_astype`"
msgstr ""

msgid "Compute Log10 with :py:func:`cdl.computation.image.compute_log10`"
msgstr ""

msgid "Compute Log10 with :py:func:`cdl.computation.image.compute_exp`"
msgstr ""

msgid "Compute arithmetic operation between two images with :py:func:`cdl.computation.image.compute_arithmetic`"
msgstr ""

msgid "Compute difference between two images with :py:func:`cdl.computation.image.compute_difference`"
msgstr ""

msgid "Compute difference with a constant with :py:func:`cdl.computation.image.compute_difference_constant`"
msgstr ""

msgid "Compute quadratic difference between two images with :py:func:`cdl.computation.image.compute_quadratic_difference`"
msgstr ""

msgid "Compute division between two images with :py:func:`cdl.computation.image.compute_division`"
msgstr ""

msgid "Compute division by a constant with :py:func:`cdl.computation.image.compute_division_constant`"
msgstr ""

msgid "Compute flat field correction with :py:func:`cdl.computation.image.compute_flatfield`"
msgstr ""

msgid "Compute data linear calibration with :py:func:`cdl.computation.image.compute_calibration`"
msgstr ""

msgid "Compute maximum data clipping with :py:func:`cdl.computation.image.compute_clip`"
msgstr ""

msgid "Compute offset correction with :py:func:`cdl.computation.image.compute_offset_correction`"
msgstr ""

msgid "Compute gaussian filter with :py:func:`cdl.computation.image.compute_gaussian_filter`"
msgstr ""

msgid "Compute moving average with :py:func:`cdl.computation.image.compute_moving_average`"
msgstr ""

msgid "Compute moving median with :py:func:`cdl.computation.image.compute_moving_median`"
msgstr ""

msgid "Compute Wiener filter with :py:func:`cdl.computation.image.compute_wiener`"
msgstr ""

msgid "Compute FFT with :py:func:`cdl.computation.image.compute_fft`"
msgstr ""

msgid "Compute iFFT with :py:func:`cdl.computation.image.compute_ifft`"
msgstr ""

msgid "Compute magnitude spectrum with :py:func:`cdl.computation.image.compute_magnitude_spectrum`"
msgstr ""

msgid "Compute phase spectrum with :py:func:`cdl.computation.image.compute_phase_spectrum`"
msgstr ""

msgid "Compute Power Spectral Density (PSD) with :py:func:`cdl.computation.image.compute_psd`"
msgstr ""

msgid "Compute Butterworth filter with :py:func:`cdl.computation.image.compute_butterworth`"
msgstr ""

msgid "Compute parametric threshold with :py:func:`cdl.computation.image.threshold.compute_threshold`"
msgstr ""

msgid "Compute threshold using Isodata algorithm with :py:func:`cdl.computation.image.threshold.compute_threshold_isodata`"
msgstr ""

msgid "Compute threshold using Li algorithm with :py:func:`cdl.computation.image.threshold.compute_threshold_li`"
msgstr ""

msgid "Compute threshold using Mean algorithm with :py:func:`cdl.computation.image.threshold.compute_threshold_mean`"
msgstr ""

msgid "Compute threshold using Minimum algorithm with :py:func:`cdl.computation.image.threshold.compute_threshold_minimum`"
msgstr ""

msgid "Compute threshold using Otsu algorithm with :py:func:`cdl.computation.image.threshold.compute_threshold_otsu`"
msgstr ""

msgid "Compute threshold using Triangle algorithm with :py:func:`cdl.computation.image.threshold.compute_threshold_triangle`"
msgstr ""

msgid "Compute threshold using Yen algorithm with :py:func:`cdl.computation.image.threshold.compute_threshold_yen`"
msgstr ""

msgid "Compute all threshold algorithms using the following functions:"
msgstr ""

msgid ":py:func:`cdl.computation.image.threshold.compute_threshold_isodata`"
msgstr ""

msgid ":py:func:`cdl.computation.image.threshold.compute_threshold_li`"
msgstr ""

msgid ":py:func:`cdl.computation.image.threshold.compute_threshold_mean`"
msgstr ""

msgid ":py:func:`cdl.computation.image.threshold.compute_threshold_minimum`"
msgstr ""

msgid ":py:func:`cdl.computation.image.threshold.compute_threshold_otsu`"
msgstr ""

msgid ":py:func:`cdl.computation.image.threshold.compute_threshold_triangle`"
msgstr ""

msgid ":py:func:`cdl.computation.image.threshold.compute_threshold_yen`"
msgstr ""

msgid "Compute gamma correction with :py:func:`cdl.computation.image.exposure.compute_adjust_gamma`"
msgstr ""

msgid "Compute log correction with :py:func:`cdl.computation.image.exposure.compute_adjust_log`"
msgstr ""

msgid "Compute sigmoid correction with :py:func:`cdl.computation.image.exposure.compute_adjust_sigmoid`"
msgstr ""

msgid "Rescale image intensity levels with :py:func`cdl.computation.image.exposure.compute_rescale_intensity`"
msgstr ""

msgid "Histogram equalization with :py:func:`cdl.computation.image.exposure.compute_equalize_hist`"
msgstr ""

msgid "Adaptive histogram equalization with :py:func:`cdl.computation.image.exposure.compute_equalize_adapthist`"
msgstr ""

msgid "Compute Total Variation denoising with :py:func:`cdl.computation.image.restoration.compute_denoise_tv`"
msgstr ""

msgid "Compute bilateral filter denoising with :py:func:`cdl.computation.image.restoration.compute_denoise_bilateral`"
msgstr ""

msgid "Compute Wavelet denoising with :py:func:`cdl.computation.image.restoration.compute_denoise_wavelet`"
msgstr ""

msgid "Denoise using White Top-Hat with :py:func:`cdl.computation.image.restoration.compute_denoise_tophat`"
msgstr ""

msgid "Compute all denoising filters using the following functions:"
msgstr ""

msgid ":py:func:`cdl.computation.image.restoration.compute_denoise_tv`"
msgstr ""

msgid ":py:func:`cdl.computation.image.restoration.compute_denoise_bilateral`"
msgstr ""

msgid ":py:func:`cdl.computation.image.restoration.compute_denoise_wavelet`"
msgstr ""

msgid ":py:func:`cdl.computation.image.restoration.compute_denoise_tophat`"
msgstr ""

msgid "Compute White Top-Hat with :py:func:`cdl.computation.image.morphology.compute_white_tophat`"
msgstr ""

msgid "Compute Black Top-Hat with :py:func:`cdl.computation.image.morphology.compute_black_tophat`"
msgstr ""

msgid "Compute Erosion with :py:func:`cdl.computation.image.morphology.compute_erosion`"
msgstr ""

msgid "Compute Dilation with :py:func:`cdl.computation.image.morphology.compute_dilation`"
msgstr ""

msgid "Compute morphological opening with :py:func:`cdl.computation.image.morphology.compute_opening`"
msgstr ""

msgid "Compute morphological closing with :py:func:`cdl.computation.image.morphology.compute_closing`"
msgstr ""

msgid "Compute all morphology filters using the following functions:"
msgstr ""

msgid ":py:func:`cdl.computation.image.morphology.compute_white_tophat`"
msgstr ""

msgid ":py:func:`cdl.computation.image.morphology.compute_black_tophat`"
msgstr ""

msgid ":py:func:`cdl.computation.image.morphology.compute_erosion`"
msgstr ""

msgid ":py:func:`cdl.computation.image.morphology.compute_dilation`"
msgstr ""

msgid ":py:func:`cdl.computation.image.morphology.compute_opening`"
msgstr ""

msgid ":py:func:`cdl.computation.image.morphology.compute_closing`"
msgstr ""

msgid "Compute Canny filter with :py:func:`cdl.computation.image.edges.compute_canny`"
msgstr ""

msgid "Compute Roberts filter with :py:func:`cdl.computation.image.edges.compute_roberts`"
msgstr ""

msgid "Compute Prewitt filter with :py:func:`cdl.computation.image.edges.compute_prewitt`"
msgstr ""

msgid "Compute Prewitt filter (horizontal) with :py:func:`cdl.computation.image.edges.compute_prewitt_h`"
msgstr ""

msgid "Compute Prewitt filter (vertical) with :py:func:`cdl.computation.image.edges.compute_prewitt_v`"
msgstr ""

msgid "Compute Sobel filter with :py:func:`cdl.computation.image.edges.compute_sobel`"
msgstr ""

msgid "Compute Sobel filter (horizontal) with :py:func:`cdl.computation.image.edges.compute_sobel_h`"
msgstr ""

msgid "Compute Sobel filter (vertical) with :py:func:`cdl.computation.image.edges.compute_sobel_v`"
msgstr ""

msgid "Compute Scharr filter with :py:func:`cdl.computation.image.edges.compute_scharr`"
msgstr ""

msgid "Compute Scharr filter (horizontal) with :py:func:`cdl.computation.image.edges.compute_scharr_h`"
msgstr ""

msgid "Compute Scharr filter (vertical) with :py:func:`cdl.computation.image.edges.compute_scharr_v`"
msgstr ""

msgid "Compute Farid filter with :py:func:`cdl.computation.image.edges.compute_farid`"
msgstr ""

msgid "Compute Farid filter (horizontal) with :py:func:`cdl.computation.image.edges.compute_farid_h`"
msgstr ""

msgid "Compute Farid filter (vertical) with :py:func:`cdl.computation.image.edges.compute_farid_v`"
msgstr ""

msgid "Compute Laplace filter with :py:func:`cdl.computation.image.edges.compute_laplace`"
msgstr ""

msgid "Compute all edges filters using the following functions:"
msgstr ""

msgid ":py:func:`cdl.computation.image.edges.compute_roberts`"
msgstr ""

msgid ":py:func:`cdl.computation.image.edges.compute_prewitt`"
msgstr ""

msgid ":py:func:`cdl.computation.image.edges.compute_prewitt_h`"
msgstr ""

msgid ":py:func:`cdl.computation.image.edges.compute_prewitt_v`"
msgstr ""

msgid ":py:func:`cdl.computation.image.edges.compute_sobel`"
msgstr ""

msgid ":py:func:`cdl.computation.image.edges.compute_sobel_h`"
msgstr ""

msgid ":py:func:`cdl.computation.image.edges.compute_sobel_v`"
msgstr ""

msgid ":py:func:`cdl.computation.image.edges.compute_scharr`"
msgstr ""

msgid ":py:func:`cdl.computation.image.edges.compute_scharr_h`"
msgstr ""

msgid ":py:func:`cdl.computation.image.edges.compute_scharr_v`"
msgstr ""

msgid ":py:func:`cdl.computation.image.edges.compute_farid`"
msgstr ""

msgid ":py:func:`cdl.computation.image.edges.compute_farid_h`"
msgstr ""

msgid ":py:func:`cdl.computation.image.edges.compute_farid_v`"
msgstr ""

msgid ":py:func:`cdl.computation.image.edges.compute_laplace`"
msgstr ""

msgid "Compute data statistics with :py:func:`cdl.computation.image.compute_stats`"
msgstr ""

msgid "Compute image centroid with :py:func:`cdl.computation.image.compute_centroid`"
msgstr ""

msgid "Compute minimum enclosing circle with :py:func:`cdl.computation.image.compute_enclosing_circle`"
msgstr ""

msgid "Compute 2D peak detection with :py:func:`cdl.computation.image.compute_peak_detection`"
msgstr ""

msgid "Compute contour shape fit with :py:func:`cdl.computation.image.detection.compute_contour_shape`"
msgstr ""

msgid "Compute peak detection based on a circle Hough transform with :py:func:`cdl.computation.image.compute_hough_circle_peaks`"
msgstr ""

msgid "Compute blob detection using Difference of Gaussian method with :py:func:`cdl.computation.image.detection.compute_blob_dog`"
msgstr ""

msgid "Compute blob detection using Determinant of Hessian method with :py:func:`cdl.computation.image.detection.compute_blob_doh`"
msgstr ""

msgid "Compute blob detection using Laplacian of Gaussian method with :py:func:`cdl.computation.image.detection.compute_blob_log`"
msgstr ""

msgid "Compute blob detection using OpenCV with :py:func:`cdl.computation.image.detection.compute_blob_opencv`"
msgstr ""

