# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Codra - Pierre Raybaut
# This file is distributed under the same license as the DataLab package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: DataLab \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-01-22 10:39+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: fr\n"
"Language-Team: fr <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.0\n"

#: ../../intro/tutorials/custom_func.rst:2
msgid "Prototyping a custom processing pipeline"
msgstr "Prototypage d'une chaîne de traitement personnalisée"

#: ../../intro/tutorials/custom_func.rst:4
msgid ""
"This example shows how to prototype a custom image processing pipeline "
"using DataLab:"
msgstr ""
"Cet exemple montre comment prototyper une chaîne de traitement d'image "
"personnalisée en utilisant DataLab :"

#: ../../intro/tutorials/custom_func.rst:6
#: ../../intro/tutorials/custom_func.rst:12
msgid "Define a custom processing function"
msgstr "Définir une fonction de traitement personnalisée"

#: ../../intro/tutorials/custom_func.rst:7
msgid "Create a macro-command to apply the function to an image"
msgstr "Créer une macro-commande pour appliquer la fonction à une image"

#: ../../intro/tutorials/custom_func.rst:8
msgid "Use the same code from an external IDE (e.g. Spyder) or a Jupyter notebook"
msgstr ""
"Utiliser le même code à partir d'un IDE externe (par exemple Spyder) ou "
"d'un notebook Jupyter"

#: ../../intro/tutorials/custom_func.rst:9
msgid "Create a plugin to integrate the function in the DataLab GUI"
msgstr ""
"Créer un plugin pour intégrer la fonction dans l'interface graphique de "
"DataLab"

#: ../../intro/tutorials/custom_func.rst:14
msgid ""
"For illustrating the extensibility of DataLab, we will use a simple image"
" processing function that is not available in the standard DataLab "
"distribution, and that represents a typical use case for prototyping a "
"custom processing pipeline."
msgstr ""
"Pour illustrer l'extensibilité de DataLab, nous utiliserons une fonction "
"de traitement d'image simple qui n'est pas disponible dans la "
"distribution standard de DataLab, et qui représente un cas d'utilisation "
"typique pour le prototypage d'une chaîne de traitement personnalisée."

#: ../../intro/tutorials/custom_func.rst:18
msgid ""
"The function that we will work on is a denoising filter that combines the"
" ideas of averaging and edge detection. This filter will average the "
"pixel values in the neighborhood, but with a twist: it will give less "
"weight to pixels that are significantly different from the central pixel,"
" assuming they might be part of an edge or noise."
msgstr ""
"La fonction sur laquelle nous allons travailler est un filtre de "
"débruitage qui combine les idées de moyennage et de détection de "
"contours. Ce filtre va moyennager les valeurs de pixels dans le "
"voisinage, mais avec une torsion : il donnera moins de poids aux pixels "
"qui sont significativement différents du pixel central, en supposant "
"qu'ils pourraient faire partie d'un bord ou d'un bruit."

#: ../../intro/tutorials/custom_func.rst:24
msgid "Here is the code of the ``weighted_average_denoise`` function::"
msgstr "Voici le code de la fonction ``weighted_average_denoise`` :"

#: ../../intro/tutorials/custom_func.rst:42
msgid ""
"For testing our processing function, we will use a generated image from a"
" DataLab plugin example (`plugins/examples/cdl_example_imageproc.py`). "
"Before starting, make sure that the plugin is installed in DataLab (see "
"the first steps of the tutorial :ref:`tutorial_blobs`)."
msgstr ""
"Pour tester notre fonction de traitement, nous utiliserons une image "
"générée à partir d'un exemple de plugin DataLab "
"(plugins/examples/cdl_example_imageproc.py). Avant de commencer, assurez-"
"vous que le plugin est installé dans DataLab (voir les premières étapes "
"du tutoriel :ref:`tutorial_blobs`)."

#: ../../intro/tutorials/custom_func.rst:49
msgid ""
"To begin, we reorganize the window layout of DataLab to have the \"Image "
"panel\" on the left and the \"Macro manager\" on the right."
msgstr ""
"Pour commencer, nous réorganisons la disposition de la fenêtre de DataLab"
" pour avoir le \"Panneau d'images\" à gauche et le \"Gestionnaire de "
"macro\" à droite."

#: ../../intro/tutorials/custom_func.rst:54
msgid ""
"We generate a new image using the \"Plugins > Extract blobs (example) > "
"Generate test image\" menu."
msgstr ""
"Nous générons une nouvelle image en utilisant le menu \"Plugins > Extract"
" blobs (example) > Generate test image\"."

#: ../../intro/tutorials/custom_func.rst:59
msgid ""
"We select a limited size for the image (e.g. 512x512 pixels) because our "
"algorithm is quite slow, and click on \"OK\"."
msgstr ""
"Nous sélectionnons une taille limitée pour l'image (par exemple 512x512 "
"pixels) car notre algorithme est assez lent, et cliquons sur \"OK\"."

#: ../../intro/tutorials/custom_func.rst:64
msgid "We can now see the generated image in the \"Image panel\"."
msgstr "Nous pouvons maintenant voir l'image générée dans le \"Panneau d'images\"."

#: ../../intro/tutorials/custom_func.rst:67
msgid "Create a macro-command"
msgstr "Créer une macro-commande"

#: ../../intro/tutorials/custom_func.rst:69
msgid ""
"Let's get back to our custom function. We can create a new macro-command "
"that will apply the function to the current image. To do so, we open the "
"\"Macro manager\" and click on the \"New macro\" |libre-gui-add| button."
msgstr ""
"Revenons à notre fonction personnalisée. Nous pouvons créer une nouvelle "
"macro-commande qui appliquera la fonction à l'image actuelle. Pour ce "
"faire, nous ouvrons le \"Gestionnaire de macro\" et cliquons sur le "
"bouton \"Nouvelle macro\" |libre-gui-add|."

#: ../../intro/tutorials/custom_func.rst:73
msgid "libre-gui-add"
msgstr ""

#: ../../intro/tutorials/custom_func.rst:77
msgid ""
"DataLab creates a new macro-command which is not empty: it contains a "
"sample code that shows how to create a new image and add it to the "
"\"Image panel\". We can remove this code and replace it with our own "
"code::"
msgstr ""
"DataLab crée une nouvelle macro-commande qui n'est pas vide : elle "
"contient un code d'exemple qui montre comment créer une nouvelle image et"
" l'ajouter au \"Panneau d'images\". Nous pouvons supprimer ce code et le "
"remplacer par le nôtre :"

#: ../../intro/tutorials/custom_func.rst:115
msgid "In DataLab, macro-commands are simply Python scripts:"
msgstr "Dans DataLab, les macro-commandes sont simplement des scripts Python :"

#: ../../intro/tutorials/custom_func.rst:117
msgid ""
"Macros are part of DataLab's **workspace**, which means that they are "
"saved and restored when exporting and importing to/from an HDF5 file."
msgstr ""
"Les macros font partie de l'**espace de travail** de DataLab, ce qui "
"signifie qu'elles sont sauvegardées et restaurées lors de l'exportation "
"et de l'importation vers/depuis un fichier HDF5."

#: ../../intro/tutorials/custom_func.rst:120
msgid ""
"Macros are executed in a separate process, so we need to import the "
"necessary modules and initialize the proxy to DataLab. The proxy is a "
"special object that allows to communicate with DataLab."
msgstr ""
"Les macros sont exécutées dans un processus séparé, nous devons donc "
"importer les modules nécessaires et initialiser le proxy vers DataLab. Le"
" proxy est un objet spécial qui permet de communiquer avec DataLab."

#: ../../intro/tutorials/custom_func.rst:124
msgid ""
"As a consequence, **when defining a plugin or when controlling DataLab "
"from an external IDE, we can use exactly the same code as in the macro-"
"command**. This is a very important point, because it means that we can "
"prototype our processing pipeline in DataLab, and then use the same code "
"in a plugin or in an external IDE to develop it further."
msgstr ""
"En conséquence, **lors de la définition d'un plugin ou du contrôle de "
"DataLab à partir d'un IDE externe, nous pouvons utiliser exactement le "
"même code que dans la macro-commande**. C'est un point très important, "
"car cela signifie que nous pouvons prototyper notre chaîne de traitement "
"dans DataLab, puis utiliser le même code dans un plugin ou dans un IDE "
"externe pour le développer davantage."

#: ../../intro/tutorials/custom_func.rst:132
msgid ""
"The macro-command is executed in DataLab's Python environment, so we can "
"use the modules that are available in DataLab. However, we can also use "
"our own modules, as long as they are installed in DataLab's Python "
"environment or in a Python distribution that is compatible with DataLab's"
" Python environment."
msgstr ""
"La macro-commande est exécutée dans l'environnement Python de DataLab, "
"nous pouvons donc utiliser les modules disponibles dans DataLab. "
"Cependant, nous pouvons également utiliser nos propres modules, tant "
"qu'ils sont installés dans l'environnement Python de DataLab ou dans une "
"distribution Python compatible avec l'environnement Python de DataLab."

#: ../../intro/tutorials/custom_func.rst:137
msgid ""
"If your custom modules are not installed in DataLab's Python environment,"
" and if they are compatible with DataLab's Python version, you can "
"prepend the ``sys.path`` with the path to the Python distribution that "
"contains your modules::"
msgstr ""
"Si vos modules personnalisés ne sont pas installés dans l'environnement "
"Python de DataLab, et s'ils sont compatibles avec la version Python de "
"DataLab, vous pouvez préfixer ``sys.path`` avec le chemin vers la "
"distribution Python qui contient vos modules :"

#: ../../intro/tutorials/custom_func.rst:145
msgid ""
"This will allow you to import your modules in the macro-command and mix "
"them with the modules that are available in DataLab."
msgstr ""
"Cela vous permettra d'importer vos modules dans la macro-commande et de "
"les mélanger avec les modules disponibles dans DataLab."

#: ../../intro/tutorials/custom_func.rst:150
msgid ""
"If you use this method, make sure that your modules are compatible with "
"DataLab's Python version. Otherwise, you will get errors when importing "
"them."
msgstr ""
"Si vous utilisez cette méthode, assurez-vous que vos modules sont "
"compatibles avec la version Python de DataLab. Sinon, vous obtiendrez des"
" erreurs lors de leur importation."

#: ../../intro/tutorials/custom_func.rst:154
msgid ""
"Now, let's execute the macro-command by clicking on the \"Run macro\" "
"|libre-camera-flash-on| button:"
msgstr ""
"Maintenant, exécutons la macro-commande en cliquant sur le bouton "
"\"Exécuter la macro\" |libre-camera-flash-on| :"

#: ../../intro/tutorials/custom_func.rst:170
msgid "libre-camera-flash-on"
msgstr ""

#: ../../intro/tutorials/custom_func.rst:157
msgid ""
"The macro-command is executed in a separate process, so we can continue "
"to work in DataLab while the macro-command is running. And, if the macro-"
"command takes too long to execute, we can stop it by clicking on the "
"\"Stop macro\" |libre-camera-flash-off| button."
msgstr ""
"La macro-commande est exécutée dans un processus séparé, nous pouvons "
"donc continuer à travailler dans DataLab pendant que la macro-commande "
"s'exécute. Et, si la macro-commande prend trop de temps à s'exécuter, "
"nous pouvons l'arrêter en cliquant sur le bouton \"Arrêter la macro\" "
"|libre-camera-flash-off|."

#: ../../intro/tutorials/custom_func.rst:174
msgid "libre-camera-flash-off"
msgstr ""

#: ../../intro/tutorials/custom_func.rst:162
msgid ""
"During the execution of the macro-command, we can see the progress in the"
" \"Macro manager\" window: the process standard output is displayed in "
"the \"Console\" below the macro editor. We can see the following "
"messages:"
msgstr ""
"Pendant l'exécution de la macro-commande, nous pouvons voir la "
"progression dans la fenêtre \"Gestionnaire de macro\" : la sortie "
"standard du processus est affichée dans la \"Console\" en dessous de "
"l'éditeur de macro. Nous pouvons voir les messages suivants :"

#: ../../intro/tutorials/custom_func.rst:166
msgid ""
"``---[...]---[# ==> Running 'Untitled 01' macro...]``: the macro-command "
"starts"
msgstr ""
"``---[...]---[# ==> Running 'Untitled 01' macro...]`` : la macro-commande"
" démarre"

#: ../../intro/tutorials/custom_func.rst:167
msgid ""
"``Connecting to DataLab XML-RPC server...OK [...]``: the proxy is "
"connected to DataLab"
msgstr ""
"``Connecting to DataLab XML-RPC server...OK [...]`` : le proxy est "
"connecté à DataLab"

#: ../../intro/tutorials/custom_func.rst:168
msgid ""
"``---[...]---[# <== 'Untitled 01' macro has finished]``: the macro-"
"command ends"
msgstr ""
"``---[...]---[# <== 'Untitled 01' macro has finished]`` : la macro-"
"commande se termine"

#: ../../intro/tutorials/custom_func.rst:180
msgid ""
"When the macro-command has finished, we can see the new image in the "
"\"Image panel\". Our filter has been applied to the image, and we can see"
" that the noise has been reduced."
msgstr ""
"Lorsque la macro-commande est terminée, nous pouvons voir la nouvelle "
"image dans le \"Panneau d'images\". Notre filtre a été appliqué à "
"l'image, et nous pouvons voir que le bruit a été réduit."

#: ../../intro/tutorials/custom_func.rst:185
msgid "Prototyping with an external IDE"
msgstr "Prototypage avec un IDE externe"

#: ../../intro/tutorials/custom_func.rst:187
msgid ""
"Now that we have a working prototype of our processing pipeline, we can "
"use the same code in an external IDE to develop it further."
msgstr ""
"Maintenant que nous avons un prototype fonctionnel de notre chaîne de "
"traitement, nous pouvons utiliser le même code dans un IDE externe pour "
"le développer davantage."

#: ../../intro/tutorials/custom_func.rst:190
msgid ""
"For example, we can use the Spyder IDE to debug our code. To do so, we "
"need to install Spyder but not necessarily in DataLab's Python "
"environment (in the case of the stand-alone version of DataLab, it "
"wouldn't be possible anyway)."
msgstr ""
"Par exemple, nous pouvons utiliser l'IDE Spyder pour déboguer notre code."
" Pour ce faire, nous devons installer Spyder mais pas nécessairement dans"
" l'environnement Python de DataLab (dans le cas de la version autonome de"
" DataLab, ce ne serait de toute façon pas possible)."

#: ../../intro/tutorials/custom_func.rst:194
msgid ""
"The only requirement is to install a DataLab client in Spyder's Python "
"environment:"
msgstr ""
"Le seul prérequis est d'installer un client DataLab dans l'environnement "
"Python de Spyder :"

#: ../../intro/tutorials/custom_func.rst:196
msgid ""
"If you use the stand-alone version of DataLab or if you want or need to "
"keep DataLab and Spyder in separate Python environments, you can install "
"the `DataLab Simple Client <https://pypi.org/project/cdlclient/>`_ "
"(``cdl-client``) using the ``pip`` package manager::"
msgstr ""
"Si vous utilisez la version autonome de DataLab ou si vous voulez ou "
"devez garder DataLab et Spyder dans des environnements Python séparés, "
"vous pouvez installer le `DataLab Simple Client "
"<https://pypi.org/project/cdlclient/>`_ (``cdl-client``) en utilisant le "
"gestionnaire de paquets ``pip`` :"

#: ../../intro/tutorials/custom_func.rst:203
msgid ""
"Or you may also install the `DataLab Python package "
"<https://pypi.org/project/cdl/>`_ (``cdl``) which includes the client "
"(but also other modules, so we don't recommend this method if you don't "
"need all DataLab's features in this Python environment)::"
msgstr ""
"Ou vous pouvez également installer le `paquet Python DataLab "
"<https://pypi.org/project/cdl/>`_ (``cdl``) qui inclut le client (mais "
"aussi d'autres modules, donc nous ne recommandons pas cette méthode si "
"vous n'avez pas besoin de toutes les fonctionnalités de DataLab dans cet "
"environnement Python) :"

#: ../../intro/tutorials/custom_func.rst:209
msgid ""
"If you use the DataLab Python package, you may run Spyder in the same "
"Python environment as DataLab, so you don't need to install the client: "
"it is already available in the main DataLab package (the ``cdl`` "
"package)."
msgstr ""
"Si vous utilisez le paquet Python DataLab, vous pouvez exécuter Spyder "
"dans le même environnement Python que DataLab, vous n'avez donc pas "
"besoin d'installer le client : il est déjà disponible dans le paquet "
"principal DataLab (le paquet ``cdl``)."

#: ../../intro/tutorials/custom_func.rst:213
msgid ""
"Once the client is installed, we can start Spyder and create a new Python"
" script:"
msgstr ""
"Une fois le client installé, nous pouvons démarrer Spyder et créer un "
"nouveau script Python :"

#: ../../intro/tutorials/custom_func.rst:221
#: ../../intro/tutorials/custom_func.rst:252
msgid "We go back to DataLab and select the first image in the \"Image panel\"."
msgstr ""
"Nous retournons à DataLab et sélectionnons la première image dans le "
"\"Panneau d'images\"."

#: ../../intro/tutorials/custom_func.rst:225
msgid ""
"Then, we execute the script in Spyder, step-by-step (using the defined "
"cells), and we can see the result in DataLab."
msgstr ""
"Ensuite, nous exécutons le script dans Spyder, étape par étape (en "
"utilisant les cellules définies), et nous pouvons voir le résultat dans "
"DataLab."

#: ../../intro/tutorials/custom_func.rst:230
msgid ""
"We can see in DataLab that a new image has been added to the \"Image "
"panel\". This image is the result of the execution of the script in "
"Spyder. Here we have used the script without any modification, but we "
"could have modified it to test new ideas, and then use the modified "
"script in DataLab."
msgstr ""
"Nous pouvons voir dans DataLab qu'une nouvelle image a été ajoutée au "
"\"Panneau d'images\". Cette image est le résultat de l'exécution du "
"script dans Spyder. Ici, nous avons utilisé le script sans aucune "
"modification, mais nous aurions pu le modifier pour tester de nouvelles "
"idées, puis utiliser le script modifié dans DataLab."

#: ../../intro/tutorials/custom_func.rst:236
msgid "Prototyping with a Jupyter notebook"
msgstr "Prototypage avec un notebook Jupyter"

#: ../../intro/tutorials/custom_func.rst:238
msgid ""
"We can also use a Jupyter notebook to prototype our processing pipeline. "
"To do so, we need to install Jupyter but not necessarily in DataLab's "
"Python environment (in the case of the stand-alone version of DataLab, it"
" wouldn't be possible anyway)."
msgstr ""
"Nous pouvons également utiliser un notebook Jupyter pour prototyper notre"
" chaîne de traitement. Pour ce faire, nous devons installer Jupyter mais "
"pas nécessairement dans l'environnement Python de DataLab (dans le cas de"
" la version autonome de DataLab, ce ne serait de toute façon pas "
"possible)."

#: ../../intro/tutorials/custom_func.rst:242
msgid ""
"The only requirement is to install a DataLab client in Jupyter's Python "
"environment (see the previous section for more details: that is exactly "
"the same procedure as for Spyder or any other IDE like Visual Studio "
"Code, for example)."
msgstr ""
"Le seul prérequis est d'installer un client DataLab dans l'environnement "
"Python de Jupyter (voir la section précédente pour plus de détails : "
"c'est exactement la même procédure que pour Spyder ou tout autre IDE "
"comme Visual Studio Code, par exemple)."

#: ../../intro/tutorials/custom_func.rst:248
msgid ""
"Once the client is installed, we can start Jupyter and create a new "
"notebook."
msgstr ""
"Une fois le client installé, nous pouvons démarrer Jupyter et créer un "
"nouveau notebook."

#: ../../intro/tutorials/custom_func.rst:256
msgid ""
"Then, we execute the notebook in Jupyter, step-by-step (using the defined"
" cells), and we can see the result in DataLab. Once again, we can see in "
"DataLab that a new image has been added to the \"Image panel\". This "
"image is the result of the execution of the notebook in Jupyter. As for "
"the script in Spyder, we could have modified the notebook to test new "
"ideas, and then use the modified notebook in DataLab."
msgstr ""
"Ensuite, nous exécutons le notebook dans Jupyter, étape par étape (en "
"utilisant les cellules définies), et nous pouvons voir le résultat dans "
"DataLab. Une fois de plus, nous pouvons voir dans DataLab qu'une nouvelle"
" image a été ajoutée au \"Panneau d'images\". Cette image est le résultat"
" de l'exécution du notebook dans Jupyter. Comme pour le script dans "
"Spyder, nous aurions pu modifier le notebook pour tester de nouvelles "
"idées, puis utiliser le notebook modifié dans DataLab."

#: ../../intro/tutorials/custom_func.rst:264
msgid "Creating a plugin"
msgstr "Création d'un plugin"

#: ../../intro/tutorials/custom_func.rst:266
msgid ""
"Now that we have a working prototype of our processing pipeline, we can "
"create a plugin to integrate it in DataLab's GUI. To do so, we need to "
"create a new Python module that will contain the plugin code. We can use "
"the same code as in the macro-command, but we need to make some changes."
msgstr ""
"Maintenant que nous avons un prototype fonctionnel de notre chaîne de "
"traitement, nous pouvons créer un plugin pour l'intégrer dans l'interface"
" graphique de DataLab. Pour ce faire, nous devons créer un nouveau module"
" Python qui contiendra le code du plugin. Nous pouvons utiliser le même "
"code que dans la macro-commande, mais nous devons apporter quelques "
"modifications."

#: ../../intro/tutorials/custom_func.rst:273
msgid "The plugin system is described in the :ref:`about_plugins` section."
msgstr "Le système de plugins est décrit dans la section :ref:`about_plugins`."

#: ../../intro/tutorials/custom_func.rst:275
msgid ""
"Apart from integrating the feature to DataLab's GUI which is more "
"convenient for the user, the advantage of creating a plugin is that we "
"can take benefit of the DataLab infrastructure, if we encapsulate our "
"processing function in a certain way (see below):"
msgstr ""
"Mis à part l'intégration de la fonctionnalité à l'interface graphique de "
"DataLab qui est plus pratique pour l'utilisateur, l'avantage de créer un "
"plugin est que nous pouvons tirer parti de l'infrastructure de DataLab, "
"si nous encapsulons notre fonction de traitement d'une certaine manière "
"(voir ci-dessous) :"

#: ../../intro/tutorials/custom_func.rst:280
msgid ""
"Our function will be executed in a separate process, so we can interrupt "
"it if it takes too long to execute."
msgstr ""
"Notre fonction sera exécutée dans un processus séparé, nous pouvons donc "
"l'interrompre si elle prend trop de temps à s'exécuter."

#: ../../intro/tutorials/custom_func.rst:283
msgid ""
"Warnings and errors will be handled by DataLab, so we don't need to "
"handle them ourselves."
msgstr ""
"Les avertissements et les erreurs seront gérés par DataLab, nous n'avons "
"donc pas besoin de les gérer nous-mêmes."

#: ../../intro/tutorials/custom_func.rst:286
msgid ""
"The most significant change is that we need to define a function that "
"will be operating on DataLab's native image objects "
"(:class:`cdl.obj.ImageObj`), instead of operating on NumPy arrays. So we "
"need to find a way to call our custom function "
"``weighted_average_denoise`` with a :class:`cdl.obj.ImageObj` as input "
"and output. To avoid writing a lot of boilerplate code, we can use the "
"function wrapper provided by DataLab: "
":class:`cdl.core.computation.image.Wrap11Func`."
msgstr "Le changement le plus significatif est que nous devons définir une fonction qui fonctionnera sur les objets d'image natifs de DataLab (:class:`cdl.obj.ImageObj`), au lieu de fonctionner sur des tableaux NumPy. Nous devons donc trouver un moyen d'appeler notre fonction personnalisée ``weighted_average_denoise`` avec un :class:`cdl.obj.ImageObj` en entrée et en sortie. Pour éviter d'écrire beaucoup de code de base, nous pouvons utiliser l'enveloppe de fonction fournie par DataLab : :class:`cdl.core.computation.image.Wrap11Func`."

#: ../../intro/tutorials/custom_func.rst:293
msgid ""
"Besides we need to define a class that describes our plugin, which must "
"inherit from :class:`cdl.plugins.PluginBase` and name the Python script "
"that contains the plugin code with a name that starts with ``cdl_`` (e.g."
" ``cdl_custom_func.py``), so that DataLab can discover it at startup."
msgstr "Par ailleurs, nous devons définir une classe qui décrit notre plugin, qui doit hériter de :class:`cdl.plugins.PluginBase` et nommer le script Python qui contient le code du plugin avec un nom qui commence par ``cdl_`` (par exemple ``cdl_custom_func.py``), afin que DataLab puisse le découvrir au démarrage."

#: ../../intro/tutorials/custom_func.rst:298
msgid ""
"Moreover, inside the plugin code, we want to add an entry in the "
"\"Plugins\" menu, so that the user can access our plugin from the GUI."
msgstr "De plus, dans le code du plugin, nous voulons ajouter une entrée dans le menu \"Plugins\", afin que l'utilisateur puisse accéder à notre plugin depuis l'interface graphique."

#: ../../intro/tutorials/custom_func.rst:301
msgid "Here is the plugin code:"
msgstr "Voici le code du plugin :"

#: ../../intro/tutorials/custom_func.rst:307
msgid ""
"To test it, we have to add the plugin script to one of the plugin "
"directories that are discovered by DataLab at startup (see the "
":ref:`about_plugins` section for more details, or the "
":ref:`tutorial_blobs` for an example)."
msgstr ""
"Pour le tester, nous devons ajouter le script du plugin à l'un des "
"répertoires de plugins qui sont découverts par DataLab au démarrage (voir"
" la section :ref:`about_plugins` pour plus de détails, ou le "
":ref:`tutorial_blobs` pour un exemple)."

#: ../../intro/tutorials/custom_func.rst:313
msgid "We restart DataLab and we can see that the plugin has been loaded."
msgstr "Nous redémarrons DataLab et nous pouvons voir que le plugin a été chargé."

#: ../../intro/tutorials/custom_func.rst:317
msgid ""
"We generate again our test image using (see the first steps of the "
"tutorial), and we process it using the plugin: \"Plugins > My custom "
"filters > Weighted average denoise\"."
msgstr ""
"Nous générons à nouveau notre image de test en utilisant (voir les "
"premières étapes du tutoriel), et nous la traitons en utilisant le plugin"
" : \"Plugins > My custom filters > Weighted average denoise\"."
